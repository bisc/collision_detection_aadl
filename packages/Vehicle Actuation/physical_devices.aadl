-- Copyright (c) 2015 Carnegie Mellon University and Ivan Ruchkin.
-- All Rights Reserved.
--
-- Released under a modified MIT license, please see license.txt or contact permission@sei.cmu.edu for full terms.  DM-0002665
--
-- This Software includes and/or makes use of the following Third-Party Software subject to its own license:
-- collision_detection_aadl
-- ========================
--
-- A AADL model of a collision prevention system for use in a telematics architecture
--
-- License
-- =======
--
-- The MIT License (MIT) 
-- Copyright (c) 2013 Nicholas Guzzardo, Mike Kabbani, Ethan McGee
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


-- This package describes physical vehicle devices (mostly actuators).

package physical_devices
	public
	with basic_computing;
	
	-- an electronic braking device attached to a bus
	device brakes
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end brakes;
	
	device implementation brakes.vehicle
	end brakes.vehicle;
	
	device accelerator
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end accelerator;
	
	device implementation accelerator.vehicle
	end accelerator.vehicle;
	
	------------------------------------------------------------------------------------------
	
	device seatbelt_tighener
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end seatbelt_tighener;
	
	device implementation seatbelt_tighener.driver
	end seatbelt_tighener.driver;
	
	device implementation seatbelt_tighener.passenger
	end seatbelt_tighener.passenger;
	
	------------------------------------------------------------------------------------------
	
	device headrest_adjuster
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end headrest_adjuster;
	
	device implementation headrest_adjuster.driver
	end headrest_adjuster.driver;
	
	device implementation headrest_adjuster.passenger
	end headrest_adjuster.passenger;
	
	------------------------------------------------------------------------------------------
	
	device seat_adjuster
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end seat_adjuster;
	
	device implementation seat_adjuster.driver
	end seat_adjuster.driver;
	
	device implementation seat_adjuster.passenger
	end seat_adjuster.passenger;
	
	------------------------------------------------------------------------------------------
	
	device airbag_deployer
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end airbag_deployer;
	
	device implementation airbag_deployer.vehicle
	end airbag_deployer.vehicle;
	
	------------------------------------------------------------------------------------------
	
	device nudger
		features
			engage: in event port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end nudger;
	
	device implementation nudger.driver
	end nudger.driver;
	
	device implementation nudger.passenger
	end nudger.passenger;
	
	------------------------------------------------------------------------------------------
	
	device automatic_wheel_turner
		features
			engage: in event data port;
			disengage: in event port;
			ba: requires bus access basic_computing::basic_bus.standard;
	end automatic_wheel_turner;
	
	device implementation automatic_wheel_turner.vehicle
	end automatic_wheel_turner.vehicle;
	
end physical_devices;