package prediction_system
	public
	with basic_debian;
	with basic_devices;
	with vehicle;
	
	thread read_data
		features
			sensor_data: in data port;
			processed_data: out data port;
		properties
			Dispatch_Protocol => Periodic;
			Compute_Execution_Time => 1ms .. 10ms;
			Period => 50ms;
	end read_data;
	
	thread implementation read_data.standard
	end read_data.standard;
	
	thread process_data
		features
			processed_data: in data port;
			avoidable_collision_detected: out event data port;
			unavoidable_collision_detected: out event data port;
		properties
			Dispatch_Protocol => Periodic;
			Compute_Execution_Time => 1ms .. 10ms;
			Period => 50ms;
	end process_data;
	
	thread implementation process_data.standard
	end process_data.standard;
	
	------------------------------------------------------------------------------------------
	
	process control
		features
			sensor_data: in data port;
			avoidable_collision_detected: out event data port;
			unavoidable_collision_detected: out event data port;
	end control;
	
	process implementation control.standard
		subcomponents
			gather_data: thread read_data.standard;
			process_data: thread process_data.standard;
		connections
			raw_data: port sensor_data -> gather_data.sensor_data;
			processed_data: port gather_data.processed_data -> process_data.processed_data;
			outcome1: port process_data.avoidable_collision_detected -> avoidable_collision_detected;
			outcome2: port process_data.unavoidable_collision_detected -> unavoidable_collision_detected;
	end control.standard;
	
	------------------------------------------------------------------------------------------
	
	system prediction_system
	end prediction_system;
	
	system implementation prediction_system.standard
		subcomponents
			motion_sensor: device basic_devices::sensor.motion;
			speed_sensor: device basic_devices::sensor.speed;
			frontal_debris_sensor: device basic_devices::sensor.frontal_debris;
			rear_debris_sensor: device basic_devices::sensor.rear_debris;
			frontal_vehicle_sensor: device basic_devices::sensor.frontal_vehicle;
			rear_vehicle_sensor: device basic_devices::sensor.rear_vehicle;
			side_vehicle_sensor: device basic_devices::sensor.side_vehicle;
			tire_pressure_sensor: device basic_devices::sensor.tire_pressure;
			tire_tread_sensor: device basic_devices::sensor.tire_tread;
			wheel_slippage_sensor: device basic_devices::sensor.wheel_slippage;
			brake_depth_sensor: device basic_devices::sensor.brake_depth;
			road_conditions_sensor: device basic_devices::sensor.road_conditions;
			visibility_sensor: device basic_devices::sensor.visibility;
			driver_responsivity_sensor: device basic_devices::sensor.driver_responsive;
			driver_impairment_sensor: device basic_devices::sensor.driver_impaired;
			bus_driver: device basic_devices::bus_driver.standard;
			debris_controller: process control.standard;
			motion_controller: process control.standard;
			speed_controller: process control.standard;
			vehicle_controller: process control.standard;
			tire_controller: process control.standard;
			conditions_controller: process control.standard;
			driver_controller: process control.standard;
			vehicle_processor: processor basic_debian::real_time.one_ghz;
			vehicle_memory: memory basic_debian::ram.standard;
			vehicle_bus: bus basic_debian::basic_bus.standard;
		connections
			motion_sensor_connection: bus access vehicle_bus <-> motion_sensor.ba;
			speed_sensor_connection: bus access vehicle_bus <-> speed_sensor.ba;
			frontal_debris_sensor_connection: bus access vehicle_bus <-> frontal_debris_sensor.ba;
			rear_debris_sensor_connection: bus access vehicle_bus <-> rear_debris_sensor.ba;
			frontal_vehicle_sensor_connection: bus access vehicle_bus <-> frontal_vehicle_sensor.ba;
			rear_vehicle_sensor_connection: bus access vehicle_bus <-> rear_vehicle_sensor.ba;
			side_vehicle_sensor_connection: bus access vehicle_bus <-> side_vehicle_sensor.ba;
			tire_pressure_sensor_connection: bus access vehicle_bus <-> tire_pressure_sensor.ba;
			tire_tread_sensor_connection: bus access vehicle_bus <-> tire_tread_sensor.ba;
			wheel_slippage_sensor_connection: bus access vehicle_bus <-> wheel_slippage_sensor.ba;
			brake_depth_sensor_connection: bus access vehicle_bus <-> brake_depth_sensor.ba;
			road_conditions_sensor_connection: bus access vehicle_bus <-> road_conditions_sensor.ba;
			visibility_sensor_connection: bus access vehicle_bus <-> visibility_sensor.ba;
			driver_responsivity_sensor_connection: bus access vehicle_bus <-> driver_responsivity_sensor.ba;
			driver_impairment_sensor_connection: bus access vehicle_bus <-> driver_impairment_sensor.ba;
			
			motion_controller_in: port motion_sensor.sensor_data -> motion_controller.sensor_data;
			speed_controller_in: port speed_sensor.sensor_data -> speed_controller.sensor_data;
			debris_controller_in1: port frontal_debris_sensor.sensor_data -> debris_controller.sensor_data;
			debris_controller_in2: port rear_debris_sensor.sensor_data -> debris_controller.sensor_data;
			vehicle_controller_in1: port frontal_vehicle_sensor.sensor_data -> vehicle_controller.sensor_data;
			vehicle_controller_in2: port rear_vehicle_sensor.sensor_data -> vehicle_controller.sensor_data; 
			vehicle_controller_in3: port side_vehicle_sensor.sensor_data -> vehicle_controller.sensor_data;
			tire_controller_in1: port tire_pressure_sensor.sensor_data -> tire_controller.sensor_data;
			tire_controller_in2: port tire_tread_sensor.sensor_data -> tire_controller.sensor_data;
			tire_controller_in3: port wheel_slippage_sensor.sensor_data -> tire_controller.sensor_data;
			conditions_controller_in: port road_conditions_sensor.sensor_data -> conditions_controller.sensor_data;
			driver_controller_in1: port driver_responsivity_sensor.sensor_data -> driver_controller.sensor_data;
			driver_controller_in2: port driver_impairment_sensor.sensor_data -> driver_controller.sensor_data;
			
			motion_controller_avoidable: port motion_controller.avoidable_collision_detected -> bus_driver.event_data;
			motion_controller_unavoidable: port motion_controller.unavoidable_collision_detected -> bus_driver.event_data;
			speed_controller_avoidable: port speed_controller.avoidable_collision_detected -> bus_driver.event_data;
			speed_controller_unavoidable: port speed_controller.unavoidable_collision_detected -> bus_driver.event_data;
			debris_controller_avoidable: port debris_controller.avoidable_collision_detected -> bus_driver.event_data;
			debris_controller_unavoidable: port debris_controller.unavoidable_collision_detected -> bus_driver.event_data;
			vehicle_controller_avoidable: port vehicle_controller.avoidable_collision_detected -> bus_driver.event_data;
			vehicle_controller_unavoidable: port vehicle_controller.unavoidable_collision_detected -> bus_driver.event_data;
			tire_controller_avoidable: port tire_controller.avoidable_collision_detected -> bus_driver.event_data;
			tire_controller_unavoidable: port tire_controller.unavoidable_collision_detected -> bus_driver.event_data;
			conditions_controller_avoidable: port conditions_controller.avoidable_collision_detected -> bus_driver.event_data;
			conditions_controller_unavoidable: port conditions_controller.unavoidable_collision_detected -> bus_driver.event_data;
			driver_controller_avoidable: port driver_controller.avoidable_collision_detected -> bus_driver.event_data;
			driver_controller_unavoidable: port driver_controller.unavoidable_collision_detected -> bus_driver.event_data;					
			
			event_driver: bus access bus_driver.ba <-> vehicle_bus;
	end prediction_system.standard;
	
end prediction_system;